//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

#pragma warning disable 108 // Disable "CS0108 '{derivedDto}.ToJson()' hides inherited member '{dtoBase}.ToJson()'. Use the new keyword if hiding was intended."
#pragma warning disable 114 // Disable "CS0114 '{derivedDto}.RaisePropertyChanged(String)' hides inherited member 'dtoBase.RaisePropertyChanged(String)'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword."
#pragma warning disable 472 // Disable "CS0472 The result of the expression is always 'false' since a value of type 'Int32' is never equal to 'null' of type 'Int32?'
#pragma warning disable 612 // Disable "CS0612 '...' is obsolete"
#pragma warning disable 1573 // Disable "CS1573 Parameter '...' has no matching param tag in the XML comment for ...
#pragma warning disable 1591 // Disable "CS1591 Missing XML comment for publicly visible type or member ..."
#pragma warning disable 8073 // Disable "CS8073 The result of the expression is always 'false' since a value of type 'T' is never equal to 'null' of type 'T?'"
#pragma warning disable 3016 // Disable "CS3016 Arrays as attribute arguments is not CLS-compliant"
#pragma warning disable 8603 // Disable "CS8603 Possible null reference return"
#pragma warning disable 8604 // Disable "CS8604 Possible null reference argument for parameter"

namespace DATEXSnapshotPull
{
    using System = global::System;

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public interface IDatexController
    {

        /// <summary>
        /// DATEX II snapshot pull
        /// </summary>

        /// <remarks>
        /// Snapshot pull DATEX II API
        /// </remarks>

        /// <param name="if_Modified_Since">Timestamp of the last response.</param>

        /// <returns>Result from snapshot pull</returns>

        System.Threading.Tasks.Task<MessageContainer> PullsnapshotdataAsync(string if_Modified_Since);

    }

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    [Microsoft.AspNetCore.Mvc.Route("datexsnapshotpull/1.0.0")]

    public partial class DatexController : Microsoft.AspNetCore.Mvc.Controller
    {
        private IDatexController _implementation;

        public DatexController(IDatexController implementation)
        {
            _implementation = implementation;
        }

        /// <summary>
        /// DATEX II snapshot pull
        /// </summary>
        /// <remarks>
        /// Snapshot pull DATEX II API
        /// </remarks>
        /// <param name="if_Modified_Since">Timestamp of the last response.</param>
        /// <returns>Result from snapshot pull</returns>
        [Microsoft.AspNetCore.Mvc.HttpGet, Microsoft.AspNetCore.Mvc.Route("pullsnapshotdata")]
        public System.Threading.Tasks.Task<MessageContainer> Pullsnapshotdata([Microsoft.AspNetCore.Mvc.FromHeader(Name = "If-Modified-Since")] string if_Modified_Since)
        {

            return _implementation.PullsnapshotdataAsync(if_Modified_Since);
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class MessageContainer
    {
        [Newtonsoft.Json.JsonProperty("payload", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<PayloadPublicationG> Payload { get; set; }

        [Newtonsoft.Json.JsonProperty("cisInformation", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CISInformation CisInformation { get; set; }

        [Newtonsoft.Json.JsonProperty("exchangeInformation", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public ExchangeInformation ExchangeInformation { get; set; } = new ExchangeInformation();

        [Newtonsoft.Json.JsonProperty("informationManagement", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public InformationManagement InformationManagement { get; set; }

        [Newtonsoft.Json.JsonProperty("messageContainerExtensionG", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ExtensionTypeG MessageContainerExtensionG { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class InformationStatusEnumG
    {
        [Newtonsoft.Json.JsonProperty("value", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public InformationStatusEnum Value { get; set; }

        [Newtonsoft.Json.JsonProperty("extendedValueG", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ExtendedValueG { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class ExtensionTypeG
    {

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public enum InformationStatusEnum
    {

        [System.Runtime.Serialization.EnumMember(Value = @"real")]
        Real = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"securityExercise")]
        SecurityExercise = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"technicalExercise")]
        TechnicalExercise = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"test")]
        Test = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"extendedG")]
        ExtendedG = 4,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class MultiLingualStringValue
    {
        [Newtonsoft.Json.JsonProperty("lang", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Lang { get; set; }

        [Newtonsoft.Json.JsonProperty("value", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Value { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class AlertCDirectionEnumG
    {
        [Newtonsoft.Json.JsonProperty("value", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public AlertCDirectionEnum Value { get; set; }

        [Newtonsoft.Json.JsonProperty("extendedValueG", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ExtendedValueG { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class MultilingualString
    {
        [Newtonsoft.Json.JsonProperty("values", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<MultiLingualStringValue> Values { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class LinearDirectionEnumG
    {
        [Newtonsoft.Json.JsonProperty("value", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public LinearDirectionEnum Value { get; set; }

        [Newtonsoft.Json.JsonProperty("extendedValueG", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ExtendedValueG { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public enum AlertCDirectionEnum
    {

        [System.Runtime.Serialization.EnumMember(Value = @"negative")]
        Negative = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"positive")]
        Positive = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"extendedG")]
        ExtendedG = 2,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class AlertCLinear
    {
        [Newtonsoft.Json.JsonProperty("alertCLocationCountryCode", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.StringLength(1024)]
        public string AlertCLocationCountryCode { get; set; }

        [Newtonsoft.Json.JsonProperty("alertCLocationTableNumber", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.StringLength(1024)]
        public string AlertCLocationTableNumber { get; set; }

        [Newtonsoft.Json.JsonProperty("alertCLocationTableVersion", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.StringLength(1024)]
        public string AlertCLocationTableVersion { get; set; }

        [Newtonsoft.Json.JsonProperty("alertCLinearExtensionG", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ExtensionTypeG AlertCLinearExtensionG { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class AlertCDirection
    {
        [Newtonsoft.Json.JsonProperty("alertCDirectionCoded", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public AlertCDirectionEnumG AlertCDirectionCoded { get; set; } = new AlertCDirectionEnumG();

        [Newtonsoft.Json.JsonProperty("alertCDirectionNamed", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public MultilingualString AlertCDirectionNamed { get; set; }

        [Newtonsoft.Json.JsonProperty("alertCAffectedDirection", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public LinearDirectionEnumG AlertCAffectedDirection { get; set; } = new LinearDirectionEnumG();

        [Newtonsoft.Json.JsonProperty("alertCDirectionExtensionG", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ExtensionTypeG AlertCDirectionExtensionG { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class AlertCLocation
    {
        [Newtonsoft.Json.JsonProperty("alertCLocationName", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public MultilingualString AlertCLocationName { get; set; }

        [Newtonsoft.Json.JsonProperty("specificLocation", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Range(0, int.MaxValue)]
        public int SpecificLocation { get; set; }

        [Newtonsoft.Json.JsonProperty("alertCLocationExtensionG", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ExtensionTypeG AlertCLocationExtensionG { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class AlertCLinearByCode : AlertCLinear
    {
        [Newtonsoft.Json.JsonProperty("alertCDirection", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public AlertCDirection AlertCDirection { get; set; } = new AlertCDirection();

        [Newtonsoft.Json.JsonProperty("locationCodeForLinearLocation", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public AlertCLocation LocationCodeForLinearLocation { get; set; } = new AlertCLocation();

        [Newtonsoft.Json.JsonProperty("alertCLinearByCodeExtensionG", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ExtensionTypeG AlertCLinearByCodeExtensionG { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class AlertCMethod4Linear : AlertCLinear
    {
        [Newtonsoft.Json.JsonProperty("alertCDirection", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public AlertCDirection AlertCDirection { get; set; } = new AlertCDirection();

        [Newtonsoft.Json.JsonProperty("alertCMethod4PrimaryPointLocation", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public AlertCMethod4PrimaryPointLocation AlertCMethod4PrimaryPointLocation { get; set; } = new AlertCMethod4PrimaryPointLocation();

        [Newtonsoft.Json.JsonProperty("alertCMethod4SecondaryPointLocation", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public AlertCMethod4SecondaryPointLocation AlertCMethod4SecondaryPointLocation { get; set; } = new AlertCMethod4SecondaryPointLocation();

        [Newtonsoft.Json.JsonProperty("alertCMethod4LinearExtensionG", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ExtensionTypeG AlertCMethod4LinearExtensionG { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class AlertCMethod2Linear : AlertCLinear
    {
        [Newtonsoft.Json.JsonProperty("alertCDirection", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public AlertCDirection AlertCDirection { get; set; } = new AlertCDirection();

        [Newtonsoft.Json.JsonProperty("alertCMethod2PrimaryPointLocation", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public AlertCMethod2PrimaryPointLocation AlertCMethod2PrimaryPointLocation { get; set; } = new AlertCMethod2PrimaryPointLocation();

        [Newtonsoft.Json.JsonProperty("alertCMethod2SecondaryPointLocation", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public AlertCMethod2SecondaryPointLocation AlertCMethod2SecondaryPointLocation { get; set; } = new AlertCMethod2SecondaryPointLocation();

        [Newtonsoft.Json.JsonProperty("alertCMethod2LinearExtensionG", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ExtensionTypeG AlertCMethod2LinearExtensionG { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class AlertCMethod2PrimaryPointLocation
    {
        [Newtonsoft.Json.JsonProperty("alertCLocation", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public AlertCLocation AlertCLocation { get; set; } = new AlertCLocation();

        [Newtonsoft.Json.JsonProperty("alertCMethod2PrimaryPointLocationExtensionG", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ExtensionTypeG AlertCMethod2PrimaryPointLocationExtensionG { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class AlertCMethod2SecondaryPointLocation
    {
        [Newtonsoft.Json.JsonProperty("alertCLocation", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public AlertCLocation AlertCLocation { get; set; } = new AlertCLocation();

        [Newtonsoft.Json.JsonProperty("alertCMethod2SecondaryPointLocationExtensionG", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ExtensionTypeG AlertCMethod2SecondaryPointLocationExtensionG { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class AlertCPoint
    {
        [Newtonsoft.Json.JsonProperty("alertCLocationCountryCode", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.StringLength(1024)]
        public string AlertCLocationCountryCode { get; set; }

        [Newtonsoft.Json.JsonProperty("alertCLocationTableNumber", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.StringLength(1024)]
        public string AlertCLocationTableNumber { get; set; }

        [Newtonsoft.Json.JsonProperty("alertCLocationTableVersion", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.StringLength(1024)]
        public string AlertCLocationTableVersion { get; set; }

        [Newtonsoft.Json.JsonProperty("alertCPointExtensionG", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ExtensionTypeG AlertCPointExtensionG { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class AlertCMethod4PrimaryPointLocation
    {
        [Newtonsoft.Json.JsonProperty("alertCLocation", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public AlertCLocation AlertCLocation { get; set; } = new AlertCLocation();

        [Newtonsoft.Json.JsonProperty("offsetDistance", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public OffsetDistance OffsetDistance { get; set; } = new OffsetDistance();

        [Newtonsoft.Json.JsonProperty("alertCMethod4PrimaryPointLocationExtensionG", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ExtensionTypeG AlertCMethod4PrimaryPointLocationExtensionG { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class AlertCMethod4SecondaryPointLocation
    {
        [Newtonsoft.Json.JsonProperty("alertCLocation", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public AlertCLocation AlertCLocation { get; set; } = new AlertCLocation();

        [Newtonsoft.Json.JsonProperty("offsetDistance", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public OffsetDistance OffsetDistance { get; set; } = new OffsetDistance();

        [Newtonsoft.Json.JsonProperty("alertCMethod4SecondaryPointLocationExtensionG", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ExtensionTypeG AlertCMethod4SecondaryPointLocationExtensionG { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class OffsetDistance
    {
        [Newtonsoft.Json.JsonProperty("offsetDistance", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Range(0, int.MaxValue)]
        public int OffsetDistance1 { get; set; }

        [Newtonsoft.Json.JsonProperty("offsetDistanceExtensionG", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ExtensionTypeG OffsetDistanceExtensionG { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class AlertCMethod2Point : AlertCPoint
    {
        [Newtonsoft.Json.JsonProperty("alertCDirection", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public AlertCDirection AlertCDirection { get; set; } = new AlertCDirection();

        [Newtonsoft.Json.JsonProperty("alertCMethod2PrimaryPointLocation", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public AlertCMethod2PrimaryPointLocation AlertCMethod2PrimaryPointLocation { get; set; } = new AlertCMethod2PrimaryPointLocation();

        [Newtonsoft.Json.JsonProperty("alertCMethod2PointExtensionG", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ExtensionTypeG AlertCMethod2PointExtensionG { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class AlertCMethod4Point : AlertCPoint
    {
        [Newtonsoft.Json.JsonProperty("alertCDirection", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public AlertCDirection AlertCDirection { get; set; } = new AlertCDirection();

        [Newtonsoft.Json.JsonProperty("alertCMethod4PrimaryPointLocation", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public AlertCMethod4PrimaryPointLocation AlertCMethod4PrimaryPointLocation { get; set; } = new AlertCMethod4PrimaryPointLocation();

        [Newtonsoft.Json.JsonProperty("alertCMethod4PointExtensionG", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ExtensionTypeG AlertCMethod4PointExtensionG { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public enum AltitudeAccuracyEnum
    {

        [System.Runtime.Serialization.EnumMember(Value = @"equalToOrLessThan1Centimetre")]
        EqualToOrLessThan1Centimetre = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"equalToOrLessThan2Centimetres")]
        EqualToOrLessThan2Centimetres = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"equalToOrLessThan5Centimetres")]
        EqualToOrLessThan5Centimetres = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"equalToOrLessThan10Centimetres")]
        EqualToOrLessThan10Centimetres = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"equalToOrLessThan20Centimetres")]
        EqualToOrLessThan20Centimetres = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"equalToOrLessThan50Centimetres")]
        EqualToOrLessThan50Centimetres = 5,

        [System.Runtime.Serialization.EnumMember(Value = @"equalToOrLessThan1Metre")]
        EqualToOrLessThan1Metre = 6,

        [System.Runtime.Serialization.EnumMember(Value = @"equalToOrLessThan2Metres")]
        EqualToOrLessThan2Metres = 7,

        [System.Runtime.Serialization.EnumMember(Value = @"equalToOrLessThan5Metres")]
        EqualToOrLessThan5Metres = 8,

        [System.Runtime.Serialization.EnumMember(Value = @"equalToOrLessThan10Metres")]
        EqualToOrLessThan10Metres = 9,

        [System.Runtime.Serialization.EnumMember(Value = @"equalToOrLessThan20Metres")]
        EqualToOrLessThan20Metres = 10,

        [System.Runtime.Serialization.EnumMember(Value = @"equalToOrLessThan50Metres")]
        EqualToOrLessThan50Metres = 11,

        [System.Runtime.Serialization.EnumMember(Value = @"equalToOrLessThan100Metres")]
        EqualToOrLessThan100Metres = 12,

        [System.Runtime.Serialization.EnumMember(Value = @"equalToOrLessThan200Metres")]
        EqualToOrLessThan200Metres = 13,

        [System.Runtime.Serialization.EnumMember(Value = @"extendedG")]
        ExtendedG = 14,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class AltitudeAccuracyEnumG
    {
        [Newtonsoft.Json.JsonProperty("value", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public AltitudeAccuracyEnum Value { get; set; }

        [Newtonsoft.Json.JsonProperty("extendedValueG", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ExtendedValueG { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class PositionConfidenceCodedErrorEnumG
    {
        [Newtonsoft.Json.JsonProperty("value", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public PositionConfidenceCodedErrorEnum Value { get; set; }

        [Newtonsoft.Json.JsonProperty("extendedValueG", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ExtendedValueG { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class CarriagewayEnumG
    {
        [Newtonsoft.Json.JsonProperty("value", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public CarriagewayEnum Value { get; set; }

        [Newtonsoft.Json.JsonProperty("extendedValueG", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ExtendedValueG { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class Lane
    {
        [Newtonsoft.Json.JsonProperty("laneNumber", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string LaneNumber { get; set; }

        [Newtonsoft.Json.JsonProperty("laneUsage", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public LaneEnumG LaneUsage { get; set; }

        [Newtonsoft.Json.JsonProperty("laneExtensionG", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ExtensionTypeG LaneExtensionG { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public enum CarriagewayEnum
    {

        [System.Runtime.Serialization.EnumMember(Value = @"connectingCarriageway")]
        ConnectingCarriageway = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"cycleTrack")]
        CycleTrack = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"entrySlipRoad")]
        EntrySlipRoad = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"exitSlipRoad")]
        ExitSlipRoad = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"flyover")]
        Flyover = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"footpath")]
        Footpath = 5,

        [System.Runtime.Serialization.EnumMember(Value = @"leftHandParallelCarriageway")]
        LeftHandParallelCarriageway = 6,

        [System.Runtime.Serialization.EnumMember(Value = @"leftHandFeederRoad")]
        LeftHandFeederRoad = 7,

        [System.Runtime.Serialization.EnumMember(Value = @"mainCarriageway")]
        MainCarriageway = 8,

        [System.Runtime.Serialization.EnumMember(Value = @"oppositeCarriageway")]
        OppositeCarriageway = 9,

        [System.Runtime.Serialization.EnumMember(Value = @"parallelCarriageway")]
        ParallelCarriageway = 10,

        [System.Runtime.Serialization.EnumMember(Value = @"rightHandFeederRoad")]
        RightHandFeederRoad = 11,

        [System.Runtime.Serialization.EnumMember(Value = @"rightHandParallelCarriageway")]
        RightHandParallelCarriageway = 12,

        [System.Runtime.Serialization.EnumMember(Value = @"roundabout")]
        Roundabout = 13,

        [System.Runtime.Serialization.EnumMember(Value = @"serviceRoad")]
        ServiceRoad = 14,

        [System.Runtime.Serialization.EnumMember(Value = @"slipRoads")]
        SlipRoads = 15,

        [System.Runtime.Serialization.EnumMember(Value = @"underpass")]
        Underpass = 16,

        [System.Runtime.Serialization.EnumMember(Value = @"unspecifiedCarriageway")]
        UnspecifiedCarriageway = 17,

        [System.Runtime.Serialization.EnumMember(Value = @"extendedG")]
        ExtendedG = 18,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class GmlLineString
    {
        [Newtonsoft.Json.JsonProperty("srsDimension", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Range(0, int.MaxValue)]
        public int SrsDimension { get; set; }

        [Newtonsoft.Json.JsonProperty("srsName", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1024)]
        public string SrsName { get; set; }

        [Newtonsoft.Json.JsonProperty("posList", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string PosList { get; set; }

        [Newtonsoft.Json.JsonProperty("gmlLineStringExtensionG", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ExtensionTypeG GmlLineStringExtensionG { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class GmlLinearRing : GmlLineString
    {
        [Newtonsoft.Json.JsonProperty("gmlLinearRingExtensionG", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ExtensionTypeG GmlLinearRingExtensionG { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class HeightTypeEnumG
    {
        [Newtonsoft.Json.JsonProperty("value", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public HeightTypeEnum Value { get; set; }

        [Newtonsoft.Json.JsonProperty("extendedValueG", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ExtendedValueG { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class AltitudeConfidence
    {
        [Newtonsoft.Json.JsonProperty("altitudeAccuracyCodedValue", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AltitudeAccuracyEnumG AltitudeAccuracyCodedValue { get; set; }

        [Newtonsoft.Json.JsonProperty("altitudeAccuracyCodedError", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PositionConfidenceCodedErrorEnumG AltitudeAccuracyCodedError { get; set; }

        [Newtonsoft.Json.JsonProperty("altitudeConfidenceExtensionG", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ExtensionTypeG AltitudeConfidenceExtensionG { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class PositionAccuracy
    {
        [Newtonsoft.Json.JsonProperty("accuracyPercentile50", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double AccuracyPercentile50 { get; set; }

        [Newtonsoft.Json.JsonProperty("accuracyPercentile75", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double AccuracyPercentile75 { get; set; }

        [Newtonsoft.Json.JsonProperty("accuracyPercentile95", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double AccuracyPercentile95 { get; set; }

        [Newtonsoft.Json.JsonProperty("positionAccuracyExtensionG", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ExtensionTypeG PositionAccuracyExtensionG { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public enum HeightTypeEnum
    {

        [System.Runtime.Serialization.EnumMember(Value = @"ellipsoidalHeight")]
        EllipsoidalHeight = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"gravityRelatedHeight")]
        GravityRelatedHeight = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"relativeHeight")]
        RelativeHeight = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"extendedG")]
        ExtendedG = 3,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class NamedArea : NamedArea2
    {
        [Newtonsoft.Json.JsonProperty("areaName", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public MultilingualString AreaName { get; set; } = new MultilingualString();

        [Newtonsoft.Json.JsonProperty("namedAreaType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public NamedAreaTypeEnumG NamedAreaType { get; set; }

        [Newtonsoft.Json.JsonProperty("country", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1024)]
        public string Country { get; set; }

        [Newtonsoft.Json.JsonProperty("namedAreaExtensionG", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public NamedAreaExtensionTypeG NamedAreaExtensionG { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class SubdivisionTypeEnumG
    {
        [Newtonsoft.Json.JsonProperty("value", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public SubdivisionTypeEnum Value { get; set; }

        [Newtonsoft.Json.JsonProperty("extendedValueG", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ExtendedValueG { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class LaneEnumG
    {
        [Newtonsoft.Json.JsonProperty("value", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public LaneEnum Value { get; set; }

        [Newtonsoft.Json.JsonProperty("extendedValueG", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ExtendedValueG { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public enum LaneEnum
    {

        [System.Runtime.Serialization.EnumMember(Value = @"allLanesCompleteCarriageway")]
        AllLanesCompleteCarriageway = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"busLane")]
        BusLane = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"busStop")]
        BusStop = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"carPoolLane")]
        CarPoolLane = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"centralReservation")]
        CentralReservation = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"crawlerLane")]
        CrawlerLane = 5,

        [System.Runtime.Serialization.EnumMember(Value = @"cycleLane")]
        CycleLane = 6,

        [System.Runtime.Serialization.EnumMember(Value = @"emergencyLane")]
        EmergencyLane = 7,

        [System.Runtime.Serialization.EnumMember(Value = @"escapeLane")]
        EscapeLane = 8,

        [System.Runtime.Serialization.EnumMember(Value = @"expressLane")]
        ExpressLane = 9,

        [System.Runtime.Serialization.EnumMember(Value = @"hardShoulder")]
        HardShoulder = 10,

        [System.Runtime.Serialization.EnumMember(Value = @"heavyVehicleLane")]
        HeavyVehicleLane = 11,

        [System.Runtime.Serialization.EnumMember(Value = @"layBy")]
        LayBy = 12,

        [System.Runtime.Serialization.EnumMember(Value = @"leftHandTurningLane")]
        LeftHandTurningLane = 13,

        [System.Runtime.Serialization.EnumMember(Value = @"leftLane")]
        LeftLane = 14,

        [System.Runtime.Serialization.EnumMember(Value = @"localTrafficLane")]
        LocalTrafficLane = 15,

        [System.Runtime.Serialization.EnumMember(Value = @"middleLane")]
        MiddleLane = 16,

        [System.Runtime.Serialization.EnumMember(Value = @"overtakingLane")]
        OvertakingLane = 17,

        [System.Runtime.Serialization.EnumMember(Value = @"rightHandTurningLane")]
        RightHandTurningLane = 18,

        [System.Runtime.Serialization.EnumMember(Value = @"rightLane")]
        RightLane = 19,

        [System.Runtime.Serialization.EnumMember(Value = @"rushHourLane")]
        RushHourLane = 20,

        [System.Runtime.Serialization.EnumMember(Value = @"setDownArea")]
        SetDownArea = 21,

        [System.Runtime.Serialization.EnumMember(Value = @"slowVehicleLane")]
        SlowVehicleLane = 22,

        [System.Runtime.Serialization.EnumMember(Value = @"throughTrafficLane")]
        ThroughTrafficLane = 23,

        [System.Runtime.Serialization.EnumMember(Value = @"tidalFlowLane")]
        TidalFlowLane = 24,

        [System.Runtime.Serialization.EnumMember(Value = @"turningLane")]
        TurningLane = 25,

        [System.Runtime.Serialization.EnumMember(Value = @"verge")]
        Verge = 26,

        [System.Runtime.Serialization.EnumMember(Value = @"extendedG")]
        ExtendedG = 27,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public enum LinearDirectionEnum
    {

        [System.Runtime.Serialization.EnumMember(Value = @"both")]
        Both = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"opposite")]
        Opposite = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"aligned")]
        Aligned = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"unknown")]
        Unknown = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"extendedG")]
        ExtendedG = 4,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class NetworkLocation : Location
    {
        [Newtonsoft.Json.JsonProperty("supplementaryPositionalDescription", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public SupplementaryPositionalDescription SupplementaryPositionalDescription { get; set; }

        [Newtonsoft.Json.JsonProperty("networkLocationExtensionG", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ExtensionTypeG NetworkLocationExtensionG { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class GmlLineStringG
    {
        [Newtonsoft.Json.JsonProperty("locationReferencingGmlLinearRing", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public GmlLinearRing LocationReferencingGmlLinearRing { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class SingleRoadLinearLocation : LinearLocation
    {
        [Newtonsoft.Json.JsonProperty("alertCLinear", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<AlertCLinearG> AlertCLinear { get; set; }

        [Newtonsoft.Json.JsonProperty("singleRoadLinearLocationExtensionG", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ExtensionTypeG SingleRoadLinearLocationExtensionG { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class LocationReference
    {
        [Newtonsoft.Json.JsonProperty("locationReferenceExtensionG", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ExtensionTypeG LocationReferenceExtensionG { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class PointCoordinates
    {
        [Newtonsoft.Json.JsonProperty("latitude", Required = Newtonsoft.Json.Required.Always)]
        public double Latitude { get; set; }

        [Newtonsoft.Json.JsonProperty("longitude", Required = Newtonsoft.Json.Required.Always)]
        public double Longitude { get; set; }

        [Newtonsoft.Json.JsonProperty("heightCoordinate", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.MaxLength(3)]
        public System.Collections.Generic.List<HeightCoordinate> HeightCoordinate { get; set; }

        [Newtonsoft.Json.JsonProperty("positionConfidenceEllipse", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PositionConfidenceEllipse PositionConfidenceEllipse { get; set; }

        [Newtonsoft.Json.JsonProperty("horizontalPositionAccuracy", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PositionAccuracy HorizontalPositionAccuracy { get; set; }

        [Newtonsoft.Json.JsonProperty("pointCoordinatesExtensionG", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ExtensionTypeG PointCoordinatesExtensionG { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class LinearLocation : NetworkLocation
    {
        [Newtonsoft.Json.JsonProperty("gmlLineString", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public GmlLineStringG GmlLineString { get; set; }

        [Newtonsoft.Json.JsonProperty("linearLocationExtensionG", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ExtensionTypeG LinearLocationExtensionG { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class PointLocation : NetworkLocation
    {
        [Newtonsoft.Json.JsonProperty("pointByCoordinates", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PointByCoordinates PointByCoordinates { get; set; }

        [Newtonsoft.Json.JsonProperty("alertCPoint", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<AlertCPointG> AlertCPoint { get; set; }

        [Newtonsoft.Json.JsonProperty("pointLocationExtensionG", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ExtensionTypeG PointLocationExtensionG { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class NamedArea2
    {
        [Newtonsoft.Json.JsonProperty("namedAreaExtensionG", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ExtensionTypeG NamedAreaExtensionG { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class NamedAreaTypeEnumG
    {
        [Newtonsoft.Json.JsonProperty("value", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public NamedAreaTypeEnum Value { get; set; }

        [Newtonsoft.Json.JsonProperty("extendedValueG", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ExtendedValueG { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class NamedAreaExtensionTypeG
    {
        [Newtonsoft.Json.JsonProperty("NamedAreaExtended", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public NamedAreaExtended NamedAreaExtended { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class NamedAreaExtended
    {
        [Newtonsoft.Json.JsonProperty("namedAreaCode", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.StringLength(1024)]
        public string NamedAreaCode { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class NutsNamedArea : NamedArea
    {
        [Newtonsoft.Json.JsonProperty("nutsCodeType", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public NutsCodeTypeEnumG NutsCodeType { get; set; } = new NutsCodeTypeEnumG();

        [Newtonsoft.Json.JsonProperty("nutsCode", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.StringLength(1024)]
        public string NutsCode { get; set; }

        [Newtonsoft.Json.JsonProperty("nutsNamedAreaExtensionG", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ExtensionTypeG NutsNamedAreaExtensionG { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class IsoNamedArea : NamedArea
    {
        [Newtonsoft.Json.JsonProperty("subdivisionType", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public SubdivisionTypeEnumG SubdivisionType { get; set; } = new SubdivisionTypeEnumG();

        [Newtonsoft.Json.JsonProperty("subdivisionCode", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.StringLength(1024)]
        public string SubdivisionCode { get; set; }

        [Newtonsoft.Json.JsonProperty("isoNamedAreaExtensionG", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ExtensionTypeG IsoNamedAreaExtensionG { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public enum NamedAreaTypeEnum
    {

        [System.Runtime.Serialization.EnumMember(Value = @"applicationRegion")]
        ApplicationRegion = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"continent")]
        Continent = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"country")]
        Country = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"countryGroup")]
        CountryGroup = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"carParkArea")]
        CarParkArea = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"carpoolArea")]
        CarpoolArea = 5,

        [System.Runtime.Serialization.EnumMember(Value = @"fuzzyArea")]
        FuzzyArea = 6,

        [System.Runtime.Serialization.EnumMember(Value = @"industrialArea")]
        IndustrialArea = 7,

        [System.Runtime.Serialization.EnumMember(Value = @"lake")]
        Lake = 8,

        [System.Runtime.Serialization.EnumMember(Value = @"meteorologicalArea")]
        MeteorologicalArea = 9,

        [System.Runtime.Serialization.EnumMember(Value = @"metropolitanArea")]
        MetropolitanArea = 10,

        [System.Runtime.Serialization.EnumMember(Value = @"municipality")]
        Municipality = 11,

        [System.Runtime.Serialization.EnumMember(Value = @"parkAndRideSite")]
        ParkAndRideSite = 12,

        [System.Runtime.Serialization.EnumMember(Value = @"ruralCounty")]
        RuralCounty = 13,

        [System.Runtime.Serialization.EnumMember(Value = @"sea")]
        Sea = 14,

        [System.Runtime.Serialization.EnumMember(Value = @"touristArea")]
        TouristArea = 15,

        [System.Runtime.Serialization.EnumMember(Value = @"trafficArea")]
        TrafficArea = 16,

        [System.Runtime.Serialization.EnumMember(Value = @"urbanCounty")]
        UrbanCounty = 17,

        [System.Runtime.Serialization.EnumMember(Value = @"order1AdministrativeArea")]
        Order1AdministrativeArea = 18,

        [System.Runtime.Serialization.EnumMember(Value = @"order2AdministrativeArea")]
        Order2AdministrativeArea = 19,

        [System.Runtime.Serialization.EnumMember(Value = @"order3AdministrativeArea")]
        Order3AdministrativeArea = 20,

        [System.Runtime.Serialization.EnumMember(Value = @"order4AdministrativeArea")]
        Order4AdministrativeArea = 21,

        [System.Runtime.Serialization.EnumMember(Value = @"order5AdministrativeArea")]
        Order5AdministrativeArea = 22,

        [System.Runtime.Serialization.EnumMember(Value = @"policeForceControlArea")]
        PoliceForceControlArea = 23,

        [System.Runtime.Serialization.EnumMember(Value = @"roadOperatorControlArea")]
        RoadOperatorControlArea = 24,

        [System.Runtime.Serialization.EnumMember(Value = @"waterArea")]
        WaterArea = 25,

        [System.Runtime.Serialization.EnumMember(Value = @"extendedG")]
        ExtendedG = 26,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class Location : LocationReference
    {
        [Newtonsoft.Json.JsonProperty("coordinatesForDisplay", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PointCoordinates CoordinatesForDisplay { get; set; }

        [Newtonsoft.Json.JsonProperty("locationExtensionG", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ExtensionTypeG LocationExtensionG { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class SupplementaryPositionalDescription
    {
        [Newtonsoft.Json.JsonProperty("locationDescription", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public MultilingualString LocationDescription { get; set; }

        [Newtonsoft.Json.JsonProperty("carriageway", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<Carriageway> Carriageway { get; set; }

        [Newtonsoft.Json.JsonProperty("namedArea", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public NamedAreaG NamedArea { get; set; }

        [Newtonsoft.Json.JsonProperty("roadInformation", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<RoadInformationG> RoadInformation { get; set; }

        [Newtonsoft.Json.JsonProperty("supplementaryPositionalDescriptionExtensionG", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ExtensionTypeG SupplementaryPositionalDescriptionExtensionG { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public enum NutsCodeTypeEnum
    {

        [System.Runtime.Serialization.EnumMember(Value = @"nuts1Code")]
        Nuts1Code = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"nuts2Code")]
        Nuts2Code = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"nuts3Code")]
        Nuts3Code = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"lau1Code")]
        Lau1Code = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"lau2Code")]
        Lau2Code = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"extendedG")]
        ExtendedG = 5,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class NutsCodeTypeEnumG
    {
        [Newtonsoft.Json.JsonProperty("value", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public NutsCodeTypeEnum Value { get; set; }

        [Newtonsoft.Json.JsonProperty("extendedValueG", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ExtendedValueG { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class HeightCoordinate
    {
        [Newtonsoft.Json.JsonProperty("heightValue", Required = Newtonsoft.Json.Required.Always)]
        public double HeightValue { get; set; }

        [Newtonsoft.Json.JsonProperty("heightType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public HeightTypeEnumG HeightType { get; set; }

        [Newtonsoft.Json.JsonProperty("altitudeConfidence", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AltitudeConfidence AltitudeConfidence { get; set; }

        [Newtonsoft.Json.JsonProperty("verticalPositionAccuracy", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PositionAccuracy VerticalPositionAccuracy { get; set; }

        [Newtonsoft.Json.JsonProperty("heightCoordinateExtensionG", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ExtensionTypeG HeightCoordinateExtensionG { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class PositionConfidenceEllipse
    {
        [Newtonsoft.Json.JsonProperty("semiMajorAxisLength", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double SemiMajorAxisLength { get; set; }

        [Newtonsoft.Json.JsonProperty("semiMajorAxisLengthCodedError", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PositionConfidenceCodedErrorEnumG SemiMajorAxisLengthCodedError { get; set; }

        [Newtonsoft.Json.JsonProperty("semiMinorAxisLength", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double SemiMinorAxisLength { get; set; }

        [Newtonsoft.Json.JsonProperty("semiMinorAxisLengthCodedError", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PositionConfidenceCodedErrorEnumG SemiMinorAxisLengthCodedError { get; set; }

        [Newtonsoft.Json.JsonProperty("semiMajorAxisOrientation", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Range(0, int.MaxValue)]
        public int SemiMajorAxisOrientation { get; set; }

        [Newtonsoft.Json.JsonProperty("semiMajorAxisOrientationError", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool SemiMajorAxisOrientationError { get; set; }

        [Newtonsoft.Json.JsonProperty("positionConfidenceEllipseExtensionG", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ExtensionTypeG PositionConfidenceEllipseExtensionG { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class PointByCoordinates
    {
        [Newtonsoft.Json.JsonProperty("bearing", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Range(0, int.MaxValue)]
        public int Bearing { get; set; }

        [Newtonsoft.Json.JsonProperty("pointCoordinates", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public PointCoordinates PointCoordinates { get; set; } = new PointCoordinates();

        [Newtonsoft.Json.JsonProperty("pointByCoordinatesExtensionG", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ExtensionTypeG PointByCoordinatesExtensionG { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class AlertCPointG
    {
        [Newtonsoft.Json.JsonProperty("locationReferencingAlertCMethod2Point", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AlertCMethod2Point LocationReferencingAlertCMethod2Point { get; set; }

        [Newtonsoft.Json.JsonProperty("locationReferencingAlertCMethod4Point", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AlertCMethod4Point LocationReferencingAlertCMethod4Point { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public enum PositionConfidenceCodedErrorEnum
    {

        [System.Runtime.Serialization.EnumMember(Value = @"outOfRange")]
        OutOfRange = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"unavailable")]
        Unavailable = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"extendedG")]
        ExtendedG = 2,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class RoadInformation
    {
        [Newtonsoft.Json.JsonProperty("roadDestination", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1024)]
        public string RoadDestination { get; set; }

        [Newtonsoft.Json.JsonProperty("roadName", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1024)]
        public string RoadName { get; set; }

        [Newtonsoft.Json.JsonProperty("roadNumber", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1024)]
        public string RoadNumber { get; set; }

        [Newtonsoft.Json.JsonProperty("roadInformationExtensionG", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ExtensionTypeG RoadInformationExtensionG { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class RoadTypeEnumG
    {
        [Newtonsoft.Json.JsonProperty("value", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public RoadTypeEnum Value { get; set; }

        [Newtonsoft.Json.JsonProperty("extendedValueG", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ExtendedValueG { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public enum RoadTypeEnum
    {

        [System.Runtime.Serialization.EnumMember(Value = @"motorway")]
        Motorway = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"trunkRoad")]
        TrunkRoad = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"mainRoad")]
        MainRoad = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"other")]
        Other = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"extendedG")]
        ExtendedG = 4,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class RoadInformationEnhanced : RoadInformation
    {
        [Newtonsoft.Json.JsonProperty("typeOfRoad", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public RoadTypeEnumG TypeOfRoad { get; set; }

        [Newtonsoft.Json.JsonProperty("roadOrigination", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<MultilingualString> RoadOrigination { get; set; }

        [Newtonsoft.Json.JsonProperty("roadInformationEnhancedExtensionG", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ExtensionTypeG RoadInformationEnhancedExtensionG { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class AlertCLinearG
    {
        [Newtonsoft.Json.JsonProperty("locationReferencingAlertCLinearByCode", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AlertCLinearByCode LocationReferencingAlertCLinearByCode { get; set; }

        [Newtonsoft.Json.JsonProperty("locationReferencingAlertCMethod4Linear", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AlertCMethod4Linear LocationReferencingAlertCMethod4Linear { get; set; }

        [Newtonsoft.Json.JsonProperty("locationReferencingAlertCMethod2Linear", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AlertCMethod2Linear LocationReferencingAlertCMethod2Linear { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public enum SubdivisionTypeEnum
    {

        [System.Runtime.Serialization.EnumMember(Value = @"administrativeAtoll")]
        AdministrativeAtoll = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"administrativeRegion")]
        AdministrativeRegion = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"administrativeTerritory")]
        AdministrativeTerritory = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"arcticRegion")]
        ArcticRegion = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"autonomousCity")]
        AutonomousCity = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"autonomousCityInNorthAfrica")]
        AutonomousCityInNorthAfrica = 5,

        [System.Runtime.Serialization.EnumMember(Value = @"autonomousCommunity")]
        AutonomousCommunity = 6,

        [System.Runtime.Serialization.EnumMember(Value = @"autonomousDistrict")]
        AutonomousDistrict = 7,

        [System.Runtime.Serialization.EnumMember(Value = @"autonomousProvince")]
        AutonomousProvince = 8,

        [System.Runtime.Serialization.EnumMember(Value = @"autonomousRegion")]
        AutonomousRegion = 9,

        [System.Runtime.Serialization.EnumMember(Value = @"canton")]
        Canton = 10,

        [System.Runtime.Serialization.EnumMember(Value = @"capitalCity")]
        CapitalCity = 11,

        [System.Runtime.Serialization.EnumMember(Value = @"city")]
        City = 12,

        [System.Runtime.Serialization.EnumMember(Value = @"cityMunicipality")]
        CityMunicipality = 13,

        [System.Runtime.Serialization.EnumMember(Value = @"cityOfCountyRight")]
        CityOfCountyRight = 14,

        [System.Runtime.Serialization.EnumMember(Value = @"commune")]
        Commune = 15,

        [System.Runtime.Serialization.EnumMember(Value = @"councilArea")]
        CouncilArea = 16,

        [System.Runtime.Serialization.EnumMember(Value = @"county")]
        County = 17,

        [System.Runtime.Serialization.EnumMember(Value = @"country")]
        Country = 18,

        [System.Runtime.Serialization.EnumMember(Value = @"department")]
        Department = 19,

        [System.Runtime.Serialization.EnumMember(Value = @"dependency")]
        Dependency = 20,

        [System.Runtime.Serialization.EnumMember(Value = @"district")]
        District = 21,

        [System.Runtime.Serialization.EnumMember(Value = @"districtMunicipality")]
        DistrictMunicipality = 22,

        [System.Runtime.Serialization.EnumMember(Value = @"districtWithSpecialStatus")]
        DistrictWithSpecialStatus = 23,

        [System.Runtime.Serialization.EnumMember(Value = @"entity")]
        Entity = 24,

        [System.Runtime.Serialization.EnumMember(Value = @"geographicalEntity")]
        GeographicalEntity = 25,

        [System.Runtime.Serialization.EnumMember(Value = @"governorate")]
        Governorate = 26,

        [System.Runtime.Serialization.EnumMember(Value = @"laender")]
        Laender = 27,

        [System.Runtime.Serialization.EnumMember(Value = @"localCouncil")]
        LocalCouncil = 28,

        [System.Runtime.Serialization.EnumMember(Value = @"londonBorough")]
        LondonBorough = 29,

        [System.Runtime.Serialization.EnumMember(Value = @"metropolitanArea")]
        MetropolitanArea = 30,

        [System.Runtime.Serialization.EnumMember(Value = @"metropolitanDepartment")]
        MetropolitanDepartment = 31,

        [System.Runtime.Serialization.EnumMember(Value = @"metropolitanDistrict")]
        MetropolitanDistrict = 32,

        [System.Runtime.Serialization.EnumMember(Value = @"metropolitanRegion")]
        MetropolitanRegion = 33,

        [System.Runtime.Serialization.EnumMember(Value = @"municipality")]
        Municipality = 34,

        [System.Runtime.Serialization.EnumMember(Value = @"overseasDepartment")]
        OverseasDepartment = 35,

        [System.Runtime.Serialization.EnumMember(Value = @"overseasRegion")]
        OverseasRegion = 36,

        [System.Runtime.Serialization.EnumMember(Value = @"overseasTerritorialCollectivity")]
        OverseasTerritorialCollectivity = 37,

        [System.Runtime.Serialization.EnumMember(Value = @"parish")]
        Parish = 38,

        [System.Runtime.Serialization.EnumMember(Value = @"province")]
        Province = 39,

        [System.Runtime.Serialization.EnumMember(Value = @"quarter")]
        Quarter = 40,

        [System.Runtime.Serialization.EnumMember(Value = @"region")]
        Region = 41,

        [System.Runtime.Serialization.EnumMember(Value = @"republic")]
        Republic = 42,

        [System.Runtime.Serialization.EnumMember(Value = @"republicanCity")]
        RepublicanCity = 43,

        [System.Runtime.Serialization.EnumMember(Value = @"selfGovernedPart")]
        SelfGovernedPart = 44,

        [System.Runtime.Serialization.EnumMember(Value = @"specialMunicipality")]
        SpecialMunicipality = 45,

        [System.Runtime.Serialization.EnumMember(Value = @"state")]
        State = 46,

        [System.Runtime.Serialization.EnumMember(Value = @"territorialUnit")]
        TerritorialUnit = 47,

        [System.Runtime.Serialization.EnumMember(Value = @"territory")]
        Territory = 48,

        [System.Runtime.Serialization.EnumMember(Value = @"twoTierCounty")]
        TwoTierCounty = 49,

        [System.Runtime.Serialization.EnumMember(Value = @"unitaryAuthority")]
        UnitaryAuthority = 50,

        [System.Runtime.Serialization.EnumMember(Value = @"ward")]
        Ward = 51,

        [System.Runtime.Serialization.EnumMember(Value = @"other")]
        Other = 52,

        [System.Runtime.Serialization.EnumMember(Value = @"extendedG")]
        ExtendedG = 53,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class Carriageway
    {
        [Newtonsoft.Json.JsonProperty("carriageway", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public CarriagewayEnumG Carriageway1 { get; set; } = new CarriagewayEnumG();

        [Newtonsoft.Json.JsonProperty("originalNumberOfLanes", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string OriginalNumberOfLanes { get; set; }

        [Newtonsoft.Json.JsonProperty("lane", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<Lane> Lane { get; set; }

        [Newtonsoft.Json.JsonProperty("carriagewayExtensionG", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ExtensionTypeG CarriagewayExtensionG { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class NamedAreaG
    {
        [Newtonsoft.Json.JsonProperty("locationReferencingNutsNamedArea", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public NutsNamedArea LocationReferencingNutsNamedArea { get; set; }

        [Newtonsoft.Json.JsonProperty("locationReferencingIsoNamedArea", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IsoNamedArea LocationReferencingIsoNamedArea { get; set; }

        [Newtonsoft.Json.JsonProperty("locationExtensionNamedAreaExtended", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public NamedAreaExtended LocationExtensionNamedAreaExtended { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class RoadInformationG
    {
        [Newtonsoft.Json.JsonProperty("parkingRoadInformationEnhanced", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public RoadInformationEnhanced ParkingRoadInformationEnhanced { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class InternationalIdentifier
    {
        [Newtonsoft.Json.JsonProperty("country", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.StringLength(1024)]
        public string Country { get; set; }

        [Newtonsoft.Json.JsonProperty("nationalIdentifier", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.StringLength(1024)]
        public string NationalIdentifier { get; set; }

        [Newtonsoft.Json.JsonProperty("internationalIdentifierExtensionG", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ExtensionTypeG InternationalIdentifierExtensionG { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class TrafficElement : SituationRecord
    {
        [Newtonsoft.Json.JsonProperty("trafficElementExtensionG", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ExtensionTypeG TrafficElementExtensionG { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class AccidentCauseEnumG
    {
        [Newtonsoft.Json.JsonProperty("value", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public AccidentCauseEnum Value { get; set; }

        [Newtonsoft.Json.JsonProperty("extendedValueG", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ExtendedValueG { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class AccidentTypeEnumG
    {
        [Newtonsoft.Json.JsonProperty("value", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public AccidentTypeEnum Value { get; set; }

        [Newtonsoft.Json.JsonProperty("extendedValueG", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ExtendedValueG { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class CollisionTypeEnumG
    {
        [Newtonsoft.Json.JsonProperty("value", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public CollisionTypeEnum Value { get; set; }

        [Newtonsoft.Json.JsonProperty("extendedValueG", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ExtendedValueG { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public enum AccidentCauseEnum
    {

        [System.Runtime.Serialization.EnumMember(Value = @"avoidanceOfObstacles")]
        AvoidanceOfObstacles = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"driverDistraction")]
        DriverDistraction = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"driverDrugAbuse")]
        DriverDrugAbuse = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"driverIllness")]
        DriverIllness = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"exceedingSpeedsLimits")]
        ExceedingSpeedsLimits = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"excessAlcohol")]
        ExcessAlcohol = 5,

        [System.Runtime.Serialization.EnumMember(Value = @"excessiveDriverTiredness")]
        ExcessiveDriverTiredness = 6,

        [System.Runtime.Serialization.EnumMember(Value = @"impermissibleManoeuvre")]
        ImpermissibleManoeuvre = 7,

        [System.Runtime.Serialization.EnumMember(Value = @"limitedVisibility")]
        LimitedVisibility = 8,

        [System.Runtime.Serialization.EnumMember(Value = @"notKeepingASafeDistance")]
        NotKeepingASafeDistance = 9,

        [System.Runtime.Serialization.EnumMember(Value = @"onTheWrongSideOfTheRoad")]
        OnTheWrongSideOfTheRoad = 10,

        [System.Runtime.Serialization.EnumMember(Value = @"pedestrianInRoad")]
        PedestrianInRoad = 11,

        [System.Runtime.Serialization.EnumMember(Value = @"poorLaneAdherence")]
        PoorLaneAdherence = 12,

        [System.Runtime.Serialization.EnumMember(Value = @"poorMergeEntryOrExitJudgement")]
        PoorMergeEntryOrExitJudgement = 13,

        [System.Runtime.Serialization.EnumMember(Value = @"poorRoadSurfaceCondition")]
        PoorRoadSurfaceCondition = 14,

        [System.Runtime.Serialization.EnumMember(Value = @"poorSurfaceAdherence")]
        PoorSurfaceAdherence = 15,

        [System.Runtime.Serialization.EnumMember(Value = @"undisclosed")]
        Undisclosed = 16,

        [System.Runtime.Serialization.EnumMember(Value = @"unknown")]
        Unknown = 17,

        [System.Runtime.Serialization.EnumMember(Value = @"vehicleFailure")]
        VehicleFailure = 18,

        [System.Runtime.Serialization.EnumMember(Value = @"other")]
        Other = 19,

        [System.Runtime.Serialization.EnumMember(Value = @"extendedG")]
        ExtendedG = 20,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public enum AccidentTypeEnum
    {

        [System.Runtime.Serialization.EnumMember(Value = @"accident")]
        Accident = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"accidentInvolvingHazardousMaterials")]
        AccidentInvolvingHazardousMaterials = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"accidentInvolvingHeavyLorries")]
        AccidentInvolvingHeavyLorries = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"accidentInvolvingMassTransitVehicle")]
        AccidentInvolvingMassTransitVehicle = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"accidentInvolvingPublicTransport")]
        AccidentInvolvingPublicTransport = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"accidentInvolvingRadioactiveMaterial")]
        AccidentInvolvingRadioactiveMaterial = 5,

        [System.Runtime.Serialization.EnumMember(Value = @"accidentInvolvingTrain")]
        AccidentInvolvingTrain = 6,

        [System.Runtime.Serialization.EnumMember(Value = @"collision")]
        Collision = 7,

        [System.Runtime.Serialization.EnumMember(Value = @"multipleVehicleAccident")]
        MultipleVehicleAccident = 8,

        [System.Runtime.Serialization.EnumMember(Value = @"secondaryAccident")]
        SecondaryAccident = 9,

        [System.Runtime.Serialization.EnumMember(Value = @"seriousInjuryOrFatalAccident")]
        SeriousInjuryOrFatalAccident = 10,

        [System.Runtime.Serialization.EnumMember(Value = @"vehicleStuckUnderBridge")]
        VehicleStuckUnderBridge = 11,

        [System.Runtime.Serialization.EnumMember(Value = @"other")]
        Other = 12,

        [System.Runtime.Serialization.EnumMember(Value = @"extendedG")]
        ExtendedG = 13,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public enum CollisionTypeEnum
    {

        [System.Runtime.Serialization.EnumMember(Value = @"collisionWithAnimal")]
        CollisionWithAnimal = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"collisionWithObstacle")]
        CollisionWithObstacle = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"collisionWithPerson")]
        CollisionWithPerson = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"headOnCollision")]
        HeadOnCollision = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"headOnOrSideCollision")]
        HeadOnOrSideCollision = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"multipleVehicleCollision")]
        MultipleVehicleCollision = 5,

        [System.Runtime.Serialization.EnumMember(Value = @"rearCollision")]
        RearCollision = 6,

        [System.Runtime.Serialization.EnumMember(Value = @"sideCollision")]
        SideCollision = 7,

        [System.Runtime.Serialization.EnumMember(Value = @"extendedG")]
        ExtendedG = 8,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public enum ProbabilityOfOccurrenceEnum
    {

        [System.Runtime.Serialization.EnumMember(Value = @"certain")]
        Certain = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"probable")]
        Probable = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"riskOf")]
        RiskOf = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"extendedG")]
        ExtendedG = 3,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class HeaderInformation
    {
        [Newtonsoft.Json.JsonProperty("informationStatus", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public InformationStatusEnumG InformationStatus { get; set; } = new InformationStatusEnumG();

        [Newtonsoft.Json.JsonProperty("headerInformationExtensionG", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ExtensionTypeG HeaderInformationExtensionG { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class SituationRecordG
    {
        [Newtonsoft.Json.JsonProperty("situationAccident", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Accident SituationAccident { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class PayloadPublication
    {
        [Newtonsoft.Json.JsonProperty("lang", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Lang { get; set; }

        [Newtonsoft.Json.JsonProperty("publicationTime", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public System.DateTimeOffset PublicationTime { get; set; }

        [Newtonsoft.Json.JsonProperty("publicationCreator", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public InternationalIdentifier PublicationCreator { get; set; } = new InternationalIdentifier();

        [Newtonsoft.Json.JsonProperty("payloadPublicationExtensionG", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ExtensionTypeG PayloadPublicationExtensionG { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class Situation
    {
        [Newtonsoft.Json.JsonProperty("idG", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string IdG { get; set; }

        [Newtonsoft.Json.JsonProperty("headerInformation", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public HeaderInformation HeaderInformation { get; set; } = new HeaderInformation();

        [Newtonsoft.Json.JsonProperty("situationRecord", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.MinLength(1)]
        public System.Collections.Generic.List<SituationRecordG> SituationRecord { get; set; } = new System.Collections.Generic.List<SituationRecordG>();

        [Newtonsoft.Json.JsonProperty("situationExtensionG", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ExtensionTypeG SituationExtensionG { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class ProbabilityOfOccurrenceEnumG
    {
        [Newtonsoft.Json.JsonProperty("value", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public ProbabilityOfOccurrenceEnum Value { get; set; }

        [Newtonsoft.Json.JsonProperty("extendedValueG", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ExtendedValueG { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class Validity
    {
        [Newtonsoft.Json.JsonProperty("validityStatus", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public ValidityStatusEnumG ValidityStatus { get; set; } = new ValidityStatusEnumG();

        [Newtonsoft.Json.JsonProperty("validityTimeSpecification", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public OverallPeriod ValidityTimeSpecification { get; set; } = new OverallPeriod();

        [Newtonsoft.Json.JsonProperty("validityExtensionG", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ExtensionTypeG ValidityExtensionG { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class LocationReferenceG
    {
        [Newtonsoft.Json.JsonProperty("locationReferencingLinearLocation", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public LinearLocation LocationReferencingLinearLocation { get; set; }

        [Newtonsoft.Json.JsonProperty("locationReferencingSingleRoadLinearLocation", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public SingleRoadLinearLocation LocationReferencingSingleRoadLinearLocation { get; set; }

        [Newtonsoft.Json.JsonProperty("locationReferencingPointLocation", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PointLocation LocationReferencingPointLocation { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class Accident : TrafficElement
    {
        [Newtonsoft.Json.JsonProperty("accidentCause", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AccidentCauseEnumG AccidentCause { get; set; }

        [Newtonsoft.Json.JsonProperty("accidentType", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.MinLength(1)]
        public System.Collections.Generic.List<AccidentTypeEnumG> AccidentType { get; set; } = new System.Collections.Generic.List<AccidentTypeEnumG>();

        [Newtonsoft.Json.JsonProperty("collisionType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CollisionTypeEnumG CollisionType { get; set; }

        [Newtonsoft.Json.JsonProperty("accidentExtensionG", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ExtensionTypeG AccidentExtensionG { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class SituationRecord
    {
        [Newtonsoft.Json.JsonProperty("idG", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string IdG { get; set; }

        [Newtonsoft.Json.JsonProperty("versionG", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string VersionG { get; set; }

        [Newtonsoft.Json.JsonProperty("situationRecordCreationTime", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public System.DateTimeOffset SituationRecordCreationTime { get; set; }

        [Newtonsoft.Json.JsonProperty("situationRecordVersionTime", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public System.DateTimeOffset SituationRecordVersionTime { get; set; }

        [Newtonsoft.Json.JsonProperty("probabilityOfOccurrence", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public ProbabilityOfOccurrenceEnumG ProbabilityOfOccurrence { get; set; } = new ProbabilityOfOccurrenceEnumG();

        [Newtonsoft.Json.JsonProperty("validity", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public Validity Validity { get; set; } = new Validity();

        [Newtonsoft.Json.JsonProperty("locationReference", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public LocationReferenceG LocationReference { get; set; } = new LocationReferenceG();

        [Newtonsoft.Json.JsonProperty("situationRecordExtensionG", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ExtensionTypeG SituationRecordExtensionG { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class SituationPublication : PayloadPublication
    {
        [Newtonsoft.Json.JsonProperty("situation", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<Situation> Situation { get; set; }

        [Newtonsoft.Json.JsonProperty("situationPublicationExtensionG", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ExtensionTypeG SituationPublicationExtensionG { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class ValidityStatusEnumG
    {
        [Newtonsoft.Json.JsonProperty("value", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public ValidityStatusEnum Value { get; set; }

        [Newtonsoft.Json.JsonProperty("extendedValueG", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ExtendedValueG { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class OverallPeriod
    {
        [Newtonsoft.Json.JsonProperty("overallStartTime", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public System.DateTimeOffset OverallStartTime { get; set; }

        [Newtonsoft.Json.JsonProperty("overallEndTime", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset OverallEndTime { get; set; }

        [Newtonsoft.Json.JsonProperty("overallPeriodExtensionG", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ExtensionTypeG OverallPeriodExtensionG { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public enum ValidityStatusEnum
    {

        [System.Runtime.Serialization.EnumMember(Value = @"active")]
        Active = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"planned")]
        Planned = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"suspended")]
        Suspended = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"definedByValidityTimeSpec")]
        DefinedByValidityTimeSpec = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"extendedG")]
        ExtendedG = 4,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class ExchangeStatusEnumG
    {
        [Newtonsoft.Json.JsonProperty("value", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public ExchangeStatusEnum Value { get; set; }

        [Newtonsoft.Json.JsonProperty("extendedValueG", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ExtendedValueG { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class ReturnInformation
    {
        [Newtonsoft.Json.JsonProperty("returnStatus", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public ExchangeReturnEnumG ReturnStatus { get; set; } = new ExchangeReturnEnumG();

        [Newtonsoft.Json.JsonProperty("returnStatusReason", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public MultilingualString ReturnStatusReason { get; set; }

        [Newtonsoft.Json.JsonProperty("codedInvalidityReason", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<InvalidityReasonEnumG> CodedInvalidityReason { get; set; }

        [Newtonsoft.Json.JsonProperty("returnInformationExtensionG", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ExtensionTypeG ReturnInformationExtensionG { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class SessionInformation
    {
        [Newtonsoft.Json.JsonProperty("sessionID", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.StringLength(1024)]
        public string SessionID { get; set; }

        [Newtonsoft.Json.JsonProperty("startSession", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset StartSession { get; set; }

        [Newtonsoft.Json.JsonProperty("sessionInformationExtensionG", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ExtensionTypeG SessionInformationExtensionG { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class ProtocolTypeEnumG
    {
        [Newtonsoft.Json.JsonProperty("value", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public ProtocolTypeEnum Value { get; set; }

        [Newtonsoft.Json.JsonProperty("extendedValueG", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ExtendedValueG { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class OperatingModeEnumG
    {
        [Newtonsoft.Json.JsonProperty("value", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public OperatingModeEnum Value { get; set; }

        [Newtonsoft.Json.JsonProperty("extendedValueG", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ExtendedValueG { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class UpdateMethodEnumG
    {
        [Newtonsoft.Json.JsonProperty("value", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public UpdateMethodEnum Value { get; set; }

        [Newtonsoft.Json.JsonProperty("extendedValueG", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ExtendedValueG { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class Agent
    {
        [Newtonsoft.Json.JsonProperty("address", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1024)]
        public string Address { get; set; }

        [Newtonsoft.Json.JsonProperty("name", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1024)]
        public string Name { get; set; }

        [Newtonsoft.Json.JsonProperty("referenceID", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1024)]
        public string ReferenceID { get; set; }

        [Newtonsoft.Json.JsonProperty("serviceURL", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1024)]
        public string ServiceURL { get; set; }

        [Newtonsoft.Json.JsonProperty("internationalIdentifier", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public InternationalIdentifier InternationalIdentifier { get; set; }

        [Newtonsoft.Json.JsonProperty("agentExtensionG", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ExtensionTypeG AgentExtensionG { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class Subscription
    {
        [Newtonsoft.Json.JsonProperty("name", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1024)]
        public string Name { get; set; }

        [Newtonsoft.Json.JsonProperty("referenceID", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Reference ReferenceID { get; set; }

        [Newtonsoft.Json.JsonProperty("subscriptionStart", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset SubscriptionStart { get; set; }

        [Newtonsoft.Json.JsonProperty("subscriptionEnd", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset SubscriptionEnd { get; set; }

        [Newtonsoft.Json.JsonProperty("deliveyFrequency", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Range(0, int.MaxValue)]
        public int DeliveyFrequency { get; set; }

        [Newtonsoft.Json.JsonProperty("validity", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Validity Validity { get; set; }

        [Newtonsoft.Json.JsonProperty("subscriptionExtensionG", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ExtensionTypeG SubscriptionExtensionG { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class MessageTypeEnumG
    {
        [Newtonsoft.Json.JsonProperty("value", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public MessageTypeEnum Value { get; set; }

        [Newtonsoft.Json.JsonProperty("extendedValueG", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ExtendedValueG { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class ExchangeContext
    {
        [Newtonsoft.Json.JsonProperty("codedExchangeProtocol", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public ProtocolTypeEnumG CodedExchangeProtocol { get; set; } = new ProtocolTypeEnumG();

        [Newtonsoft.Json.JsonProperty("exchangeSpecificationVersion", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.StringLength(1024)]
        public string ExchangeSpecificationVersion { get; set; }

        [Newtonsoft.Json.JsonProperty("operatingMode", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public OperatingModeEnumG OperatingMode { get; set; }

        [Newtonsoft.Json.JsonProperty("updateMethod", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public UpdateMethodEnumG UpdateMethod { get; set; }

        [Newtonsoft.Json.JsonProperty("nonCodedExchangeProtocol", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1024)]
        public string NonCodedExchangeProtocol { get; set; }

        [Newtonsoft.Json.JsonProperty("supplierOrCisRequester", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public Agent SupplierOrCisRequester { get; set; } = new Agent();

        [Newtonsoft.Json.JsonProperty("clientOrCisProvider", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<Agent> ClientOrCisProvider { get; set; }

        [Newtonsoft.Json.JsonProperty("subscription", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Subscription Subscription { get; set; }

        [Newtonsoft.Json.JsonProperty("exchangeContextExtensionG", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ExtensionTypeG ExchangeContextExtensionG { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class DynamicInformation
    {
        [Newtonsoft.Json.JsonProperty("exchangeStatus", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public ExchangeStatusEnumG ExchangeStatus { get; set; } = new ExchangeStatusEnumG();

        [Newtonsoft.Json.JsonProperty("exchangeStatusDescription", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public MultilingualString ExchangeStatusDescription { get; set; }

        [Newtonsoft.Json.JsonProperty("completedPaylod", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool CompletedPaylod { get; set; }

        [Newtonsoft.Json.JsonProperty("messageSequencingNumber", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Range(0, int.MaxValue)]
        public int MessageSequencingNumber { get; set; }

        [Newtonsoft.Json.JsonProperty("messageGenerationTimestamp", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public System.DateTimeOffset MessageGenerationTimestamp { get; set; }

        [Newtonsoft.Json.JsonProperty("returnInformation", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ReturnInformation ReturnInformation { get; set; }

        [Newtonsoft.Json.JsonProperty("sessionInformation", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public SessionInformation SessionInformation { get; set; }

        [Newtonsoft.Json.JsonProperty("dynamicInformationExtensionG", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ExtensionTypeG DynamicInformationExtensionG { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public enum ExchangeReturnEnum
    {

        [System.Runtime.Serialization.EnumMember(Value = @"ack")]
        Ack = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"closeSessionRequest")]
        CloseSessionRequest = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"fail")]
        Fail = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"snapshotSynchronisationRequest")]
        SnapshotSynchronisationRequest = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"extendedG")]
        ExtendedG = 4,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public enum ExchangeStatusEnum
    {

        [System.Runtime.Serialization.EnumMember(Value = @"closingSession")]
        ClosingSession = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"offline")]
        Offline = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"online")]
        Online = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"openingSession")]
        OpeningSession = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"resuming")]
        Resuming = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"undefined")]
        Undefined = 5,

        [System.Runtime.Serialization.EnumMember(Value = @"extendedG")]
        ExtendedG = 6,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public enum InvalidityReasonEnum
    {

        [System.Runtime.Serialization.EnumMember(Value = @"invalidCISInformation")]
        InvalidCISInformation = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"invalidClient")]
        InvalidClient = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"invalidExchangeContext")]
        InvalidExchangeContext = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"invalidInformationManagement")]
        InvalidInformationManagement = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"invalidMessage")]
        InvalidMessage = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"invalidPayload")]
        InvalidPayload = 5,

        [System.Runtime.Serialization.EnumMember(Value = @"invalidSequencingNumber")]
        InvalidSequencingNumber = 6,

        [System.Runtime.Serialization.EnumMember(Value = @"invalidSession")]
        InvalidSession = 7,

        [System.Runtime.Serialization.EnumMember(Value = @"invalidSupplier")]
        InvalidSupplier = 8,

        [System.Runtime.Serialization.EnumMember(Value = @"other")]
        Other = 9,

        [System.Runtime.Serialization.EnumMember(Value = @"extendedG")]
        ExtendedG = 10,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public enum MessageTypeEnum
    {

        [System.Runtime.Serialization.EnumMember(Value = @"CISFeedback")]
        CISFeedback = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"CISServiceRequest")]
        CISServiceRequest = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"closeSession")]
        CloseSession = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"keepAlive")]
        KeepAlive = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"openSession")]
        OpenSession = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"payloadDelivery")]
        PayloadDelivery = 5,

        [System.Runtime.Serialization.EnumMember(Value = @"return")]
        Return = 6,

        [System.Runtime.Serialization.EnumMember(Value = @"extendedG")]
        ExtendedG = 7,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public enum OperatingModeEnum
    {

        [System.Runtime.Serialization.EnumMember(Value = @"conditionTriggered")]
        ConditionTriggered = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"onOccurrence")]
        OnOccurrence = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"other")]
        Other = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"periodic")]
        Periodic = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"extendedG")]
        ExtendedG = 4,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public enum ProtocolTypeEnum
    {

        [System.Runtime.Serialization.EnumMember(Value = @"deltaPull")]
        DeltaPull = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"deltaPush")]
        DeltaPush = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"other")]
        Other = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"simpleCIS")]
        SimpleCIS = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"simplePush")]
        SimplePush = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"snapshotPull")]
        SnapshotPull = 5,

        [System.Runtime.Serialization.EnumMember(Value = @"snapshotPush")]
        SnapshotPush = 6,

        [System.Runtime.Serialization.EnumMember(Value = @"statefulCIS")]
        StatefulCIS = 7,

        [System.Runtime.Serialization.EnumMember(Value = @"statefulPush")]
        StatefulPush = 8,

        [System.Runtime.Serialization.EnumMember(Value = @"extendedG")]
        ExtendedG = 9,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class ExchangeReturnEnumG
    {
        [Newtonsoft.Json.JsonProperty("value", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public ExchangeReturnEnum Value { get; set; }

        [Newtonsoft.Json.JsonProperty("extendedValueG", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ExtendedValueG { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class InvalidityReasonEnumG
    {
        [Newtonsoft.Json.JsonProperty("value", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public InvalidityReasonEnum Value { get; set; }

        [Newtonsoft.Json.JsonProperty("extendedValueG", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ExtendedValueG { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class Reference
    {
        [Newtonsoft.Json.JsonProperty("idG", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string IdG { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public enum UpdateMethodEnum
    {

        [System.Runtime.Serialization.EnumMember(Value = @"allElementUpdate")]
        AllElementUpdate = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"allInformationUpdate")]
        AllInformationUpdate = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"other")]
        Other = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"singleElementUpdate")]
        SingleElementUpdate = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"snapshot")]
        Snapshot = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"extendedG")]
        ExtendedG = 5,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class ExchangeInformation
    {
        [Newtonsoft.Json.JsonProperty("messageType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public MessageTypeEnumG MessageType { get; set; }

        [Newtonsoft.Json.JsonProperty("exchangeContext", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public ExchangeContext ExchangeContext { get; set; } = new ExchangeContext();

        [Newtonsoft.Json.JsonProperty("dynamicInformation", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public DynamicInformation DynamicInformation { get; set; } = new DynamicInformation();

        [Newtonsoft.Json.JsonProperty("exchangeInformationExtensionG", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ExtensionTypeG ExchangeInformationExtensionG { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class PayloadPublicationG
    {
        [Newtonsoft.Json.JsonProperty("versionG", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string VersionG { get; set; } = "3.4";

        [Newtonsoft.Json.JsonProperty("modelBaseVersionG", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string ModelBaseVersionG { get; set; } = "3";

        [Newtonsoft.Json.JsonProperty("extensionNameG", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ExtensionNameG { get; set; }

        [Newtonsoft.Json.JsonProperty("extensionVersionG", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ExtensionVersionG { get; set; }

        [Newtonsoft.Json.JsonProperty("profileNameG", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ProfileNameG { get; set; }

        [Newtonsoft.Json.JsonProperty("profileVersionG", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ProfileVersionG { get; set; }

        [Newtonsoft.Json.JsonProperty("situationSituationPublication", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public SituationPublication SituationSituationPublication { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class ServiceFeedback
    {
        [Newtonsoft.Json.JsonProperty("serviceRequestFeedbackReason", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public MultilingualString ServiceRequestFeedbackReason { get; set; }

        [Newtonsoft.Json.JsonProperty("serviceRequestStatus", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public ServiceActionStatusEnumG ServiceRequestStatus { get; set; } = new ServiceActionStatusEnumG();

        [Newtonsoft.Json.JsonProperty("serviceRequestReference", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public VersionedReference ServiceRequestReference { get; set; } = new VersionedReference();

        [Newtonsoft.Json.JsonProperty("serviceProvider", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public Agent ServiceProvider { get; set; } = new Agent();

        [Newtonsoft.Json.JsonProperty("serviceFeedbackExtensionG", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ExtensionTypeG ServiceFeedbackExtensionG { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class ServiceRequest
    {
        [Newtonsoft.Json.JsonProperty("idG", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string IdG { get; set; }

        [Newtonsoft.Json.JsonProperty("versionG", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string VersionG { get; set; }

        [Newtonsoft.Json.JsonProperty("elementToProcessReference", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Reference ElementToProcessReference { get; set; }

        [Newtonsoft.Json.JsonProperty("elementToProcessVersionedReference", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public VersionedReference ElementToProcessVersionedReference { get; set; }

        [Newtonsoft.Json.JsonProperty("expiryTime", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public VersionedReference ExpiryTime { get; set; }

        [Newtonsoft.Json.JsonProperty("externalReference", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1024)]
        public string ExternalReference { get; set; }

        [Newtonsoft.Json.JsonProperty("notPredefinedServiceName", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1024)]
        public string NotPredefinedServiceName { get; set; }

        [Newtonsoft.Json.JsonProperty("predefinedService", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public PredefinedServiceEnumG PredefinedService { get; set; } = new PredefinedServiceEnumG();

        [Newtonsoft.Json.JsonProperty("requestedAction", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public ServiceActionEnumG RequestedAction { get; set; } = new ServiceActionEnumG();

        [Newtonsoft.Json.JsonProperty("servicerRequestCreationTime", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public System.DateTimeOffset ServicerRequestCreationTime { get; set; }

        [Newtonsoft.Json.JsonProperty("servicerRequestVersionTime", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public System.DateTimeOffset ServicerRequestVersionTime { get; set; }

        [Newtonsoft.Json.JsonProperty("customServiceParameter", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1024)]
        public string CustomServiceParameter { get; set; }

        [Newtonsoft.Json.JsonProperty("serviceRequester", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public Agent ServiceRequester { get; set; } = new Agent();

        [Newtonsoft.Json.JsonProperty("serviceProvider", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.MinLength(1)]
        public System.Collections.Generic.List<Agent> ServiceProvider { get; set; } = new System.Collections.Generic.List<Agent>();

        [Newtonsoft.Json.JsonProperty("serviceRequestCondition", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ServiceRequestCondition ServiceRequestCondition { get; set; }

        [Newtonsoft.Json.JsonProperty("serviceRequestExtensionG", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ExtensionTypeG ServiceRequestExtensionG { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public enum PredefinedServiceEnum
    {

        [System.Runtime.Serialization.EnumMember(Value = @"broadcastDelivery")]
        BroadcastDelivery = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"other")]
        Other = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"tmpActivation")]
        TmpActivation = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"vmsMessageProcessing")]
        VmsMessageProcessing = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"extendedG")]
        ExtendedG = 4,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public enum ServiceActionEnum
    {

        [System.Runtime.Serialization.EnumMember(Value = @"agreement")]
        Agreement = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"cancellation")]
        Cancellation = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"implementation")]
        Implementation = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"processing")]
        Processing = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"statusInformation")]
        StatusInformation = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"termination")]
        Termination = 5,

        [System.Runtime.Serialization.EnumMember(Value = @"extendedG")]
        ExtendedG = 6,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public enum ServiceActionStatusEnum
    {

        [System.Runtime.Serialization.EnumMember(Value = @"compliant")]
        Compliant = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"failed")]
        Failed = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"notCompliant")]
        NotCompliant = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"processing")]
        Processing = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"rejected")]
        Rejected = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"scheduled")]
        Scheduled = 5,

        [System.Runtime.Serialization.EnumMember(Value = @"success")]
        Success = 6,

        [System.Runtime.Serialization.EnumMember(Value = @"timedOut")]
        TimedOut = 7,

        [System.Runtime.Serialization.EnumMember(Value = @"extendedG")]
        ExtendedG = 8,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class ServiceActionStatusEnumG
    {
        [Newtonsoft.Json.JsonProperty("value", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public ServiceActionStatusEnum Value { get; set; }

        [Newtonsoft.Json.JsonProperty("extendedValueG", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ExtendedValueG { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class VersionedReference
    {
        [Newtonsoft.Json.JsonProperty("idG", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string IdG { get; set; }

        [Newtonsoft.Json.JsonProperty("versionG", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string VersionG { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class PredefinedServiceEnumG
    {
        [Newtonsoft.Json.JsonProperty("value", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public PredefinedServiceEnum Value { get; set; }

        [Newtonsoft.Json.JsonProperty("extendedValueG", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ExtendedValueG { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class ServiceActionEnumG
    {
        [Newtonsoft.Json.JsonProperty("value", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public ServiceActionEnum Value { get; set; }

        [Newtonsoft.Json.JsonProperty("extendedValueG", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ExtendedValueG { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class ServiceRequestCondition
    {
        [Newtonsoft.Json.JsonProperty("conditionDescription", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public MultilingualString ConditionDescription { get; set; }

        [Newtonsoft.Json.JsonProperty("externalIdCondition", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<string> ExternalIdCondition { get; set; }

        [Newtonsoft.Json.JsonProperty("referencedCondition", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<Reference> ReferencedCondition { get; set; }

        [Newtonsoft.Json.JsonProperty("versionReferencedCondition", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<VersionedReference> VersionReferencedCondition { get; set; }

        [Newtonsoft.Json.JsonProperty("serviceRequestConditionExtensionG", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ExtensionTypeG ServiceRequestConditionExtensionG { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class CISInformation
    {
        [Newtonsoft.Json.JsonProperty("serviceFeedback", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<ServiceFeedback> ServiceFeedback { get; set; }

        [Newtonsoft.Json.JsonProperty("serviceRequest", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<ServiceRequest> ServiceRequest { get; set; }

        [Newtonsoft.Json.JsonProperty("cisInformationExtensionG", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ExtensionTypeG CisInformationExtensionG { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class ManagementTypeEnumG
    {
        [Newtonsoft.Json.JsonProperty("value", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public ManagementTypeEnum Value { get; set; }

        [Newtonsoft.Json.JsonProperty("extendedValueG", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ExtendedValueG { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class ElementReference
    {
        [Newtonsoft.Json.JsonProperty("managementStatus", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public ManagementTypeEnumG ManagementStatus { get; set; } = new ManagementTypeEnumG();

        [Newtonsoft.Json.JsonProperty("reference", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Reference Reference { get; set; }

        [Newtonsoft.Json.JsonProperty("versionedReference", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public VersionedReference VersionedReference { get; set; }

        [Newtonsoft.Json.JsonProperty("elementReferenceExtensionG", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ExtensionTypeG ElementReferenceExtensionG { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class InformationManagedResourceList
    {
        [Newtonsoft.Json.JsonProperty("elementReference", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.MinLength(1)]
        public System.Collections.Generic.List<ElementReference> ElementReference { get; set; } = new System.Collections.Generic.List<ElementReference>();

        [Newtonsoft.Json.JsonProperty("informationManagedResourceListExtensionG", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ExtensionTypeG InformationManagedResourceListExtensionG { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public enum ManagementTypeEnum
    {

        [System.Runtime.Serialization.EnumMember(Value = @"cancelled")]
        Cancelled = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"closed")]
        Closed = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"extendedG")]
        ExtendedG = 2,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class InformationManagement
    {
        [Newtonsoft.Json.JsonProperty("informationManagedResourceList", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public InformationManagedResourceList InformationManagedResourceList { get; set; }

        [Newtonsoft.Json.JsonProperty("informationManagementExtensionG", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ExtensionTypeG InformationManagementExtensionG { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }


}

#pragma warning restore  108
#pragma warning restore  114
#pragma warning restore  472
#pragma warning restore  612
#pragma warning restore 1573
#pragma warning restore 1591
#pragma warning restore 8073
#pragma warning restore 3016
#pragma warning restore 8603
#pragma warning restore 8604